Software systems are routinely used to process mathematical knowledge. Some of them are designed to represent and store mathematical theorems and their proofs and some check that a proof of a theorem is correct. Another type of systems, called automated theorem provers, can construct proofs of mathematical theorems fully automatically without the assistance of a human mathematician. Automated theorem provers are complex and powerful tools that are used in applications that require rigorous reasoning, for example in formal methods for computer systems engineering. Theorem provers work with formal logic and expect their users to present their problems as logical formulas. However, encoding an application problem in logic can be a very challenging task. This thesis explores how such encoding can be made less challenging. For that, the thesis develops several extensions to the formal logic used by theorem provers. On one hand, these extensions make encoding of application problems more straightforward. On the other, they allow applications include more information about their problems in logical formulas and automated theorem provers can use this information to construct proofs more efficiently. The thesis demonstrates the benefits of automated theorem proving with these extensions on a large collection of application problems coming from diverse domains.